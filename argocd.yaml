global:
  domain: argocd.local

redis-ha:
  enabled: false

# Application controller settings
controller:
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

# Repository server settings
repoServer:
  autoscaling:
    enabled: true
    minReplicas: 2
  replicas: 1
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

applicationSet:
  replicas: 2

configs:
  params:
    server.insecure: true
  # Simplified RBAC for local development
  rbac:
    policy.default: role:admin
    scopes: "[groups]"
  # kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
  secret:
    argocdServerAdminPassword: "$2a$12$mACnH5lzNhVWRvArLuqF6OuPh9jZlAAwn1OsKn/oVk7t6pMkrTZPS" # password: admin123
    argocdServerAdminPasswordMtime: "2023-01-01T00:00:00Z"

  # Repository server settings
  repositories:
    - url: https://github.com/toyo-tomi/helm-charts
      type: git
      name: main-repo
    - url: https://github.com/toyo-tomi/helm-charts
      type: git
      name: helm-charts-repo
    # Add more repositories as needed
    - url: https://github.com/your-org/another-repo
      type: git
      name: another-repo

server:
  # Autoscaling improvements
  autoscaling:
    enabled: false
    minReplicas: 1 # Start with 1 for local development
    maxReplicas: 3 # Add max replicas
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
    behavior: # Add scaling behavior for stability
      scaleDown:
        stabilizationWindowSeconds: 300
        policies:
          - type: Pods
            value: 1
            periodSeconds: 60
      scaleUp:
        stabilizationWindowSeconds: 60
        policies:
          - type: Pods
            value: 2
            periodSeconds: 60

  # Resource requests/limits for autoscaling
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi

  # Single ingress handling both HTTP and gRPC
  ingress:
    enabled: true
    ingressClassName: nginx
    hostname: localhost
    path: /argocd(/|$)(.*)
    pathType: ImplementationSpecific
    tls: false
    
    # Annotations for NGINX ingress controller
    annotations:
      # Disable SSL redirect for local HTTP access
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
      # Use HTTP backend protocol
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      # Enable gRPC-Web support for CLI access
      nginx.ingress.kubernetes.io/grpc-backend: "true"
      # Increase body size for large manifests
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      # Timeout configurations
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
      # Rewrite target for path-based routing
      nginx.ingress.kubernetes.io/rewrite-target: /$2
      # Capture group for rewrite
      nginx.ingress.kubernetes.io/use-regex: "true"
    
    # Additional labels for the ingress resource
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/part-of: argocd
    
    # Uncomment below for additional hosts
    extraHosts:
      - name: argocd-alt.local
        path: /
    
    # Uncomment below to enable TLS
    # tls: true
    # extraTls:
    #   - hosts:
    #     - argocd.local
    #     secretName: argocd-server-tls

  # Disable separate gRPC ingress (redundant with improved main ingress)
  ingressGrpc:
    enabled: false

  # Additional server configuration for local development
  extraArgs:
    - --insecure=true # Allow HTTP for local development
    # - --grpc-web # Enable gRPC-Web support

  # Service configuration
  service:
    type: ClusterIP
    # Uncomment below for NodePort access as backup
    # type: NodePort
    # nodePortHttp: 30080
    # nodePortHttps: 30443

# Disable Dex for simpler local auth
dex:
  enabled: false

# Notifications (optional for local)
notifications:
  enabled: false

